#include <avr/io.h>
#include "uartf.h"
#include "keypad.h"
#include "timer1.h"
#include <util/delay.h>

#define PASSWORD_LENGTH 5
#define MC2_READY 0x10

char password1[PASSWORD_LENGTH + 2];
char password2[PASSWORD_LENGTH + 2];
char password3[PASSWORD_LENGTH + 2];
int pass1=0;
int pass2=0;
int pass3=0;
int key;
uint16 count1=0;
uint16 count2=0;
uint16 count3=0;
int swap=0;
char main_choise;

static volatile uint8 tick = 0;

void timerCounter(void)
{
	tick++;
}

void myOwnDelay(uint16 numofoverflows)
{
	tick=0;
	/*
	 * T overflow = 65.5 ms
	 * so 15 overflows to count 1 sec
	 */
	uint8 num=numofoverflows*15;

	Timer1_ConfigType timer_Configuration = {0, 0, prescalar_8, normal};
	Timer1_init(&timer_Configuration);
	/* Used call back which call in ISR for time1*/
	Timer1_setCallBack(timerCounter);
	/* Delay*/
	while(tick != num);
	/* Deinitialization of timer1*/
	Timer1_deInit();

}

void checkpass(void)
{
	UART_sendString("checkpass#");
	count3 = 0;
	pass3 = 0;
	key=0;
	LCD_clearScreen();
	lcd_displaystring("Plz enter pass:");
	LCD_movecursor(1,0);
	_delay_ms(200);
	while (count3 < 5) {
		key = KEYPAD_getPressedKey();
		_delay_ms(200);
		lcd_displayCharacter('*');

		if (key == '=')
		{
			break;
		}
		pass3 = (pass3 * 10) + (key);
		count3++;

	}
	itoa(pass3, password3, 10);
	password3[count3]='#';
	password3[count3+1]='\0';
	while(UART_recieveByte() != MC2_READY){}
	UART_sendString(password3);
}
void main_menu(void)
{
	char g[10];
	LCD_clearScreen();
	lcd_displaystring("+ : Open the door");
	LCD_movecursor(1,0);
	lcd_displaystring("- : Change pass");
	key = KEYPAD_getPressedKey();

	if(key == '+')
	{

		for (int i = 1; i <= 3; i++)
		{
			checkpass();
			UART_receiveString(g);

			if(strcmp(g,"matched") == 0)
			{

				LCD_clearScreen();

				while(UART_recieveByte() != MC2_READY){}
				UART_sendString("opendoor#");
				lcd_displaystring("Door is Unlocking");
				myOwnDelay(15);
				LCD_clearScreen();
				lcd_displaystring("Door is open");
				myOwnDelay(3);
				LCD_clearScreen();
				lcd_displaystring("Door is Locking");
				myOwnDelay(15);

				swap=1;
				break;
			}else if(strcmp(g,"unmatched") == 0)
			{

				LCD_clearScreen();
				lcd_displaystring("incorrect pass");
				_delay_ms(1000);

			}
			if(i==3)
			{
				UART_sendString("error#");
				LCD_clearScreen();
				lcd_displaystring("error");
				_delay_ms(5000);
			}
		}


	}
	else if(key == '-')
	{
		for (int i = 1; i <= 3; i++)
		{
			checkpass();
			UART_receiveString(g);

			if(strcmp(g,"matched") == 0)
			{

				LCD_clearScreen();
				lcd_displaystring("correct pass");
				_delay_ms(1000);
				swap=0;
				break;
			}else if(strcmp(g,"unmatched") == 0)
			{

				LCD_clearScreen();
				lcd_displaystring("incorrect pass");
				_delay_ms(1000);

			}
			if(i==3)
			{
				UART_sendString("error#");
				LCD_clearScreen();
				lcd_displaystring("error");
				_delay_ms(5000);
			}
		}
	}
}
void setpassword() {
	UART_sendString("setpass#");
	count1 = 0;
	pass1 = 0;
	key=0;
	LCD_clearScreen();
	lcd_displaystring("Plz enter pass:");
	LCD_movecursor(1,0);
	_delay_ms(200);
	while (count1 < 5) {
		key = KEYPAD_getPressedKey();
		_delay_ms(200);
		lcd_displayCharacter('*');

		if (key == '=')
		{
			break;
		}
		pass1 = (pass1 * 10) + (key);
		count1++;

	}

	LCD_clearScreen();
	lcd_displaystring("Plz re-enter pass:");
	LCD_movecursor(1,0);
	count2 = 0;
	pass2 = 0; // Initialize password
	while (count2 < 5)
	{
		key = KEYPAD_getPressedKey();
		_delay_ms(300);
		lcd_displayCharacter('*');

		if (key == '=')
		{
			break;
		}
		pass2 = (pass2 * 10) + (key);
		count2++;

	}
	itoa(pass1, password1, 10);
	itoa(pass2, password2, 10);
	password1[count1]='#';
	password1[count1+1]='\0';
	password2[count2]='#';
	password2[count2+1]='\0';


	UART_sendString(password1);
	UART_sendString(password2);

}
void passcheck(void)
{
	char p[10];
	while(UART_recieveByte() != MC2_READY){}
	UART_receiveString(p);

	if(strcmp(p,"matched") == 0)
	{

		LCD_clearScreen();
		lcd_displaystring("pass is updated");
		swap=1;
	}else
	{
		LCD_clearScreen();
		lcd_displaystring("pass not matched!!");
		_delay_ms(2000);
		swap=0;
	}
}

int main(void) {
	UART_ConfigType uartConfig = {eightbit, Disabled, one_bit, bd9600};
	UART_init(&uartConfig);
	lcd_init();
	SREG|=(1<<7);


	while(UART_recieveByte() != MC2_READY){}
	while (1)
	{

		if(swap==0)
		{
			setpassword();
			passcheck();

		}
		else if(swap == 1)
		{
			main_menu();
		}


	}
}
